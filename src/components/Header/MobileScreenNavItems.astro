---
type navItems = {
  label: string;
  href: string;
};
type Props = {
  navItems: navItems[];
};
const { navItems } = Astro.props;
---

<ul
  class="flex flex-col h-[100vh] items-center justify-center gap-12 w-full bg-gray-50 fixed z-10 top-0"
  id="navBar"
>
  {
    navItems.length > 0 &&
      navItems.map((items) => (
        <li class="group transition-all duration-100 ease-in-out">
          <a 
          href={items.href}
          class="active:text-red-500 bg-left-bottom bg-gradient-to-r cursor-pointer from-textTeal to-textTeal bg-[length:0%_2px] bg-no-repeat group-hover:bg-[length:100%_2px] py-1 transition-all duration-200 ease-out"
          >
            {items.label}
          </a>
        </li>
      ))
  }
  <a
    class="px-2 py-1 font-semibold text-green-500 bg-textBlack hover:opacity-80"
    href="https://terminal.gauravkumarkarki.com/"
    target="_blank"
  >
    Terminal
  </a>
  <span class="text-2xl absolute top-4 right-4 cursor-pointer" id="closeNav">
    X
  </span>
</ul>
<span class="absolute md:hidden top-5 right-3 w-[20px] h-[20px]" id="hamburger">
  <img
    src="/hamburger.png"
    class="w-full h-full object-contain overflow-hidden cursor-pointer"
    id="hamburger"
  />
</span>

<script>
  var w = window.innerWidth;
  var h = window.innerHeight;

  const navBar = document.getElementById("navBar") as HTMLElement;

  const closeNav = document.getElementById("closeNav") as HTMLElement;

  const hamburger = document.getElementById("hamburger") as HTMLElement;
  if (w < 768) {
    navBar.style.display = "none";
    closeNav.style.display = "none";
    hamburger.style.display = "flex";

    closeNav.addEventListener("click", () => {
      navBar.style.display = "none";
      hamburger.style.display = "flex";
    });

    hamburger.addEventListener("click", () => {
      navBar.style.display = "flex";
      closeNav.style.display = "flex";
    });
  } else {
    navBar.style.display="none";
    hamburger.style.display="none";
    closeNav.style.display="none";
  }
</script>
